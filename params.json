{"name":"Access Point Linux","tagline":"Making embedded linux machine as WiFi HotSpot","body":"##<B>Setting up Embedded linux device as WiFi Hotspot<B>\r\n\r\n###<B>Test Setup:<B>\r\n* Colibri VF61 V1.1A\r\n* Colibri Evaluation Board V3.1a/ Iris Rev 1.1\r\n* Ambicom WL250N-USB Wireless 802.11b/g/n (V1.0a)\r\n\r\n<img src=\"https://raw.githubusercontent.com/bhuvanchandra/images-repo/master/images-ap/evalBoard_3.1a_test_setup.jpg\" width=\"320\" height=\"240\">\r\n\r\n####During boot or upon insertion the following kernel messages identify Ambicom WL250N-USB stick:\r\n````\r\n[   10.153746] usb 1-1.1: new high speed USB device number 3 using fsl-ehci\r\n[   10.299135] usb 1-1.1: New USB device found, idVendor=148f, idProduct=3070\r\n[   10.309882] usb 1-1.1: New USB device strings: Mfr=1, Product=2, SerialNumber=3\r\n[   10.324597] usb 1-1.1: Product: 802.11 n WLAN\r\n[   10.332875] usb 1-1.1: Manufacturer: Ralink\r\n[   10.340887] usb 1-1.1: SerialNumber: 1.0\r\n[   10.384713] Registered led device: rt2800usb-phy0::radio\r\n[   10.384904] Registered led device: rt2800usb-phy0::assoc\r\n[   10.385062] Registered led device: rt2800usb-phy0::quality\r\n````\t\r\n\r\n####In user space it can be identified by `lsusb` as follows:\r\n````\r\nroot@colibri-vf:~# lsusb\r\n…..\r\nBus 001 Device 003: ID 148f:3070 Ralink Technology, Corp. RT2870/RT3070 Wireless Adapter\r\n…..\r\n````\t\r\n\r\n####Ethernet/Network:\r\n````\r\n[   20.491401] eth0: Freescale FEC PHY driver [Micrel KS8041] (mii_bus:phy_addr=2:01, irq=-1)\r\n[   20.517857] ADDRCONF(NETDEV_UP): eth0: link is not ready\r\n[   22.500404] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready\r\n[    7.721280] eth0: no IPv6 routers present\r\n````\t\r\n````\r\nroot@colibri-vf:~# ifconfig eth0\r\neth0      Link encap:Ethernet  HWaddr 00:14:2D:49:3D:8D  \r\n          inet addr:10.18.0.116  Bcast:10.18.3.255  Mask:255.255.252.0\r\n          inet6 addr: fe80::214:2dff:fe49:3d8d/64 Scope:Link\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:31427 errors:0 dropped:24 overruns:0 frame:0\r\n          TX packets:2186 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:3677223 (3.5 MiB)  TX bytes:580461 (566.8 KiB)\r\n````\t\r\n````\r\nroot@colibri-vf:~# connmanctl services\r\n*AO Wired                { ethernet_00142d493d8d_cable }\r\nroot@colibri-vf:~# connmanctl services ethernet_00142d493d8d_cable                                                                                                                                           \r\n[ ethernet_00142d493d8d_cable ]\r\n\r\n\r\n  Type = ethernet\r\n  Security = [ ] \r\n  State = online\r\n  Favorite = True\r\n  Immutable = False\r\n  AutoConnect = True\r\n  Name = Wired\r\n  Ethernet = { Method=auto Interface=eth0 Address=00:14:2D:49:3D:8D MTU=1500 }\r\n  IPv4 = { Method=dhcp Address=10.18.0.116 Netmask=255.255.252.0 Gateway=10.18.0.1 }\r\n  IPv4.Configuration = { Method=dhcp }\r\n  IPv6 = { }\r\n  IPv6.Configuration = { Method=auto Privacy=disabled }\r\n  Nameservers = [ 10.18.0.2 10.0.0.2 ] \r\n  Nameservers.Configuration = [ ] \r\n  Timeservers = [ 10.18.0.1 ] \r\n  Timeservers.Configuration = [ ] \r\n  Domains = [ toradex.int ] \r\n  Domains.Configuration = [ ] \r\n  Proxy = { Method=direct }\r\n  Proxy.Configuration = { }\r\n  Provider = { }\r\n````\t\r\n\r\n###<B>To configure a hotspot requires several steps:<B>\r\n* Configure the wireless adapter with IP address\r\n* Configure UDHCP server\r\n* Install and configure hostap-daemon  the user space daemon for IEEE 802.11 management\r\n* Configure IP routing between wlan and ethernet\r\n\r\n\r\n###<B>Configure the wireless adapter with IP address:<B>\r\nSetting static IP for wlan0 manually :\r\n````\r\nroot@colibri-vf:~#ifconfig wlan0 192.168.0.1 up\r\nroot@colibri-vf:~# ifconfig wlan0\r\nwlan0     Link encap:Ethernet  HWaddr 00:10:7A:4F:73:B4  \r\n          inet addr:192.168.0.1  Bcast:192.168.0.255  Mask:255.255.255.0\r\n          inet6 addr: fe80::210:7aff:fe4f:73b4/64 Scope:Link\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:578 errors:0 dropped:3 overruns:0 frame:0\r\n          TX packets:441 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:97112 (94.8 KiB)  TX bytes:138516 (135.2 KiB)\r\n````\r\n###<B>Configure UDHCP server:<B>\r\nCreate a configuration file for udhcp server\r\nSample UDHCP server configuration file:\r\n/etc/udhcpd.conf\r\n````\r\n# The start and end of the DHCP lease block\r\nstart           192.168.0.20\r\nend             192.168.0.254\r\n\r\n\r\n# The wireless interface used by udhcpd\r\ninterface       wlan0\r\n\r\n\r\n# If remaining is true (default), udhcpd will store the time\r\n# remaining for each lease in the udhcpd leases file. This is\r\n# for embedded systems that cannot keep time between reboots.\r\nremaining       yes\r\n\r\n\r\n# The location of DHCP lease file\r\nlease_file      /var/lib/misc/udhcpd.leases\r\n\r\n\r\n# The location of the pid file\r\npidfile         /var/run/udhcpd.pid\r\n\r\n\r\n# DNS servers that connected devices will use.  Use Google DNS.\r\nopt    dns      8.8.8.8 8.8.4.4\r\n# or Use openDNS\r\n#opt dns 208.67.222.222 208.67.220.220\r\n#or Use unblocks DNS\r\n#opt dns 208.122.23.22 208.122.23.23\r\n\r\n\r\n# The IP address of the access point\r\nopt    router   192.168.0.1\r\nopt    subnet   255.255.255.0\r\nopt    domain   local\r\n\r\n\r\n# 10 days of lease period\r\nopt     lease   864000\r\n\r\n\r\n# Optionally specify static lease(s)\r\n#static_lease   00:51:AF:05:B0:05 192.168.0.100\r\n#static_lease   00:51:AF:00:E1:02 192.168.0.110\r\n````\t\r\n####<B>Install and configure hostapd  the user space daemon:<B>\r\nhostapd recipe was available in open embedded, one can easily build it using OE build.\r\n\r\nhttp://layers.openembedded.org/layerindex/recipe/7367/\r\n\r\nPlease refer the below knowledge base article for setting up oe-core:\r\nhttp://developer.toradex.com/software-resources/arm-family/linux/board-support-package/openembedded-(core)\r\n\r\nOnce hostap-daemon was build, copy the respective .ipk package and dependencies to target (Colibri VF61) and install the ipk packages.\r\n\r\nInstalling ipk packages:\r\n````\r\nroot@colibri-vf:~#opkg install hostap-daemon_1.0-r0_armv7ahf-vfp-neon.ipk\r\n````\t\r\n\r\nAfter installing hostapd, a sample configuration file hostapd.conf will be available at /etc/hostapd.conf and a script file hostapd was populated in /etc/init.d/  for auto starting at boot time.\r\n\r\nOne can use/edit the configuration available by default or use a custom configuration.\r\n\r\n####<B>Sample custom hostapd configuration file:<B>\r\n/etc/hostapd.conf\r\n````\r\n# Interface used by Access Point\r\ninterface=wlan0\r\n\r\n\r\n# Dump file for state information (on SIGUSR1)\r\ndump_file=/tmp/hostapd.dump\r\n\r\n\r\n# Firmware Driver\r\ndriver=nl80211\r\n\r\n\r\n# Access Point SSID\r\nssid=ToradexColibriVF61-AP\r\n\r\n\r\n# Country code (ISO/IEC 3166-1). Used to set regulatory domain.\r\n# Set as needed to indicate country in which device is operating.\r\n# This can limit available channels and transmit power.\r\ncountry_code=IN-KA\r\n\r\n\r\n# Operation Mode (a = IEEE 802.11a, b = IEEE 802.11b, g = IEEE 802.11g)\r\nhw_mode=g\r\n\r\n\r\n# Channel number (IEEE 802.11)\r\n# (default: 0, i.e., not set)\r\nchannel=6\r\n\r\n\r\nmacaddr_acl=0\r\nauth_algs=1\r\nignore_broadcast_ssid=0\r\n\r\n\r\n# Key management algorithm\r\nwpa_key_mgmt=WPA-PSK\r\nwpa_passphrase=toradexColibriVF61\r\nwpa=2\r\n\r\n\r\n# Set ciphers\r\nwpa_pairwise=TKIP\r\nrsn_pairwise=CCMP\r\n````\t\r\n\r\nConfigure IP routing between the wlan and ethernet:\r\nFor the first time we need to do the following steps for enabling ip forwarding.\r\n\r\n####<B>Enabling IP forwarding:<B>\r\n````\r\nUncomment the “#net.ipv4.ip_forward=1” line in /etc/sysctl.conf\r\n````\r\n````\t\r\nroot@colibri-vf:~#sysctl -w net.ipv4.ip_forward=1\r\n\t or\r\nroot@colibri-vf:~#echo 1 > /proc/sys/net/ipv4/ip_forward\r\n````\t\r\n\r\n####<B>Create new iptables Rule:<B>\r\n````\r\nroot@colibri-vf:~#iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\r\nroot@colibri-vf:~#iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT\r\n````\t\r\n\r\n####<B>Saving iptables:<B>\r\nSave the iptables for future reuse.\r\n````\r\nroot@colibri-vf:~#iptables-save > /etc/iptables.ipv4.nat\r\n````\r\nFor configuring the wlan0 at start one can use systemd service files to do the initial configuration for setting the static ip for wlan0 and starting hostapd, udhcp daemons and restoring the iptable for IP forwarding.\r\n\r\n####<B>Systemd service file for initializing wlan0 and starting hostap-daemon and udhcp-daemon:<B>\r\nCreate a new systemd service file:\r\n/etc/systemd/system/access-point.service\r\n````\r\n[Unit]\r\nDescription=Access Point\r\nWants=network.target\r\nBefore=network.target\r\nBindsTo=sys-subsystem-net-devices-wlan0.device\r\nAfter=sys-subsystem-net-devices-wlan0.device\r\n\r\n\r\n[Service]\r\nType=oneshot\r\nRemainAfterExit=yes\r\nExecStart=/bin/ip link set dev wlan0 up\r\nExecStart=/bin/ip addr add 192.168.0.1/24 broadcast 192.168.0.255 dev wlan0\r\nExecStart=/usr/sbin/hostapd -B /etc/hostapd.conf\r\nExecStart=/usr/sbin/udhcpd -fS /etc/udhcpd.conf\r\n\r\n\r\nExecStop=/sbin/ip addr flush dev wlan0\r\nExecStop=/sbin/ip link set dev wlan0 down\r\n\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n````\t\r\n####<B>Enabling access-point.service:<B>\r\n````\r\nroot@colibri-vf:~#systemctl enable access-point.service\r\n````\t\r\n\r\n######NOTE: There is no need of the script file hostapd in /etc/init.d as we are taking care of loading it at boot time using systemd service file one can remove the file. ( root@colibri-vf:~#rm /etc/init.d/hostapd )\r\n\r\n####<B>Systemd service file for restoring iptables:<B>\r\nCreate a new systemd service file:\r\n/etc/systemd/system/iptables-restore.service\r\n````\r\n[Unit]\r\nDescription=iptables\r\nDefaultDependencies=false\r\n\r\n\r\n[Service]\r\nType=oneshot\r\nRemainAfterExit=yes\r\nExecStart=/usr/sbin/iptables-restore /etc/iptables.ipv4.nat\r\n\r\n\r\n[Install]\r\nWantedBy=access-point.service\r\n````\r\n####<B>Enabling iptables-restore.service:<B>\r\n````\r\nroot@colibri-vf:~#systemctl enable iptables-restore.service\r\n````\r\n####<B>Sample iptables.ip4.nat with ip forwarding:<B>\r\n/etc/iptables.ipv4.nat\r\n````\r\n# Generated by iptables-save v1.4.17 on  Thu Jun 05 12:10:23 2014\r\n*nat\r\n:PREROUTING ACCEPT [19:2729]\r\n:INPUT ACCEPT [19:2729]\r\n:OUTPUT ACCEPT [0:0]\r\n:POSTROUTING ACCEPT [0:0]\r\n-A POSTROUTING -o eth0 -j MASQUERADE\r\nCOMMIT\r\n# Completed on  Thu Jun 05 12:10:23 2014\r\n# Generated by iptables-save v1.4.17 on  Thu Jun 05 12:10:23 2014\r\n*mangle\r\n:PREROUTING ACCEPT [185:24908]\r\n:INPUT ACCEPT [178:23356]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [93:14375]\r\n:POSTROUTING ACCEPT [143:26355]\r\nCOMMIT\r\n# Completed on  Thu Jun 05 12:10:23 2014\r\n# Generated by iptables-save v1.4.17 on   Thu Jun 05 12:10:23 2014\r\n*filter\r\n:INPUT ACCEPT [31:3442]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A FORWARD -i wlan0 -o eth0 -j ACCEPT\r\nCOMMIT\r\n# Completed on  Thu Jun 05 12:10:23 2014\r\n````\r\nOnce everything was configured restart the module, and check whether all the services are up and running successfully.\r\n####<B>Checking the systemd services:<B>\r\n````\r\nroot@colibri-vf:~# systemctl status access-point.service  \r\naccess-point.service - Access Point\r\n          Loaded: loaded (/etc/systemd/system/ap.service; enabled)\r\n          Active: activating (start) since Tue 2014-03-18 22:01:00 UTC; 13min ago\r\n         Process: 319 ExecStart=/usr/sbin/hostapd -B /etc/hostapd.conf (code=exited, status=0/SUCCESS)\r\n         Process: 312 ExecStart=/usr/sbin/wpa_supplicant -B -iwlan0 -c /etc/wpa_supplicant.conf (code=exited, status=0/SUCCESS)\r\n         Process: 310 ExecStart=/bin/ip addr add 192.168.0.1/24 broadcast 192.168.0.255 dev wlan0 (code=exited, status=0/SUCCESS)\r\n         Process: 216 ExecStart=/bin/ip link set dev wlan0 up (code=exited, status=0/SUCCESS)\r\n        Main PID: 329 (udhcpd)\r\n          CGroup: name=systemd:/system/ap.service\r\n                  |-318 /usr/sbin/wpa_supplicant -B -iwlan0 -c /etc/wpa_suppl...\r\n                  |-328 /usr/sbin/hostapd -B /etc/hostapd.conf\r\n                  `-329 /usr/sbin/udhcpd -fS /etc/udhcpd.conf\r\n````\r\n````\t\r\nroot@colibri-vf:~# systemctl status iptables-restore.service \r\niptables-restore.service - iptables\r\n          Loaded: loaded (/etc/systemd/system/iptables-restore.service; enabled)\r\n          Active: active (exited) since Mon 2001-01-01 09:11:12 UTC; 13 years 2 months ago\r\n         Process: 67 ExecStart=/usr/sbin/iptables-restore /etc/iptables.ipv4.nat (code=exited, status=0/SUCCESS)\r\n````\r\n````\t\r\nroot@colibri-vf:~# ps aux | grep -E 'hostapd|udhcpd'\r\nroot       328  0.1  0.4   4752  1056 ?        Ss   22:01   0:01 /usr/sbin/hostapd -B /etc/hostapd.conf\r\nroot       329  0.0  0.2   2152   684 ?        Ss   22:01   0:00 /usr/sbin/udhcpd -fS /etc/udhcpd.conf\r\n````\r\n####<B>Check the ethernet interface:<B>\r\n````\r\nroot@colibri-vf:~# ifconfig\r\neth0      Link encap:Ethernet  HWaddr 00:14:2D:49:3D:8D  \r\n          inet addr:10.18.0.116  Bcast:10.18.3.255  Mask:255.255.252.0\r\n          inet6 addr: fe80::214:2dff:fe49:3d8d/64 Scope:Link\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:6588 errors:0 dropped:2 overruns:0 frame:0\r\n          TX packets:1123 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:922746 (901.1 KiB)  TX bytes:459961 (449.1 KiB)\r\n\r\n\r\nlo        Link encap:Local Loopback  \r\n          inet addr:127.0.0.1  Mask:255.0.0.0\r\n          inet6 addr: ::1/128 Scope:Host\r\n          UP LOOPBACK RUNNING  MTU:16436  Metric:1\r\n          RX packets:52 errors:0 dropped:0 overruns:0 frame:0\r\n          TX packets:52 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:0 \r\n          RX bytes:2600 (2.5 KiB)  TX bytes:2600 (2.5 KiB)\r\n\r\n\r\nmon.wlan0 Link encap:UNSPEC  HWaddr 00-10-7A-4F-73-B4-00-00-00-00-00-00-00-00-00-00  \r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:10590 errors:0 dropped:0 overruns:0 frame:0\r\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:3197137 (3.0 MiB)  TX bytes:0 (0.0 B)\r\n\r\n\r\nwlan0     Link encap:Ethernet  HWaddr 00:10:7A:4F:73:B4  \r\n          inet addr:192.168.0.1  Bcast:192.168.0.255  Mask:255.255.255.0\r\n          inet6 addr: fe80::210:7aff:fe4f:73b4/64 Scope:Link\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:1022 errors:0 dropped:3 overruns:0 frame:0\r\n          TX packets:1011 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:444925 (434.4 KiB)  TX bytes:304509 (297.3 KiB)\r\n````\t\r\nNow we can able to see the access point SSID on other wifi devices. One can connect to the access point with the appropriate pass key and able to browse the internet.\r\n\r\n<img src=\"https://github.com/bhuvanchandra/images-repo/raw/master/images-ap/ap_screenshot_1.png\" width=\"640\" height=\"480\">\r\n\r\n<img src=\"https://github.com/bhuvanchandra/images-repo/raw/master/images-ap/ap_screenshot_2.png\" width=\"640\" height=\"480\">\r\n\r\n<img src=\"https://github.com/bhuvanchandra/images-repo/raw/master/images-ap/ap_screenshot_3.png\" width=\"640\" height=\"480\">","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}